image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  CI_AWS_CF_CREATE_STACK_FILE: "aws/cf_create_stack.json"
  CI_AWS_S3_PUSH_FILE: "aws/push_s3.json"
  CI_AWS_EC2_DEPLOYMENT_FILE: "aws/create_deployment.json"
  CI_AWS_CF_STACK_NAME: "larks_final_project"
  TRACE: 1

include:
  - template: AWS/CF-Provision-and-Deploy-EC2.gitlab-ci.yml

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - build
  - static analysis
  - test
  - provision
  - review
  - production

build:
  stage: build
  script:
    - python deploy/zip.py
    - cp deploy/appspec.yml dist/
    - cp deploy/scripts/unzip_build.sh dist/
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour

lint:
  stage: static analysis
  image: registry.gitlab.com/mafda/python-linting
  script:
    - pip install flake8
    - python -m flake8 . --max-line-length=150
  allow_failure: true

unit_tests:
  stage: test
  script:
    - pip install -r requirements.txt
    - pip install -U pytest
    - python -m pytest tests/unit_tests

functional_tests:
  stage: test
  script:
    - pip install -r requirements.txt
    - pip install -U pytest
    - python -m  pytest tests/functional_tests

review_ec2:
  stage: review
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
